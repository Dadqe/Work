# a = []
# if not a:
#     print('a is an empty list')
# else:
#     print(a)

# Код завершится через 5 секунд, прикольно
# import time
# print('Пожалуйста, введите ваш электронный адрес : ', end=' ', flush=True)  
# # запустите код выше, чтобы увидеть разницу.
# time.sleep(5)

# Похоже, никто не обращался с вопросом о том, нужно ли вам сначала проверять список. Поскольку вы не предоставили никакого дополнительного контекста, я могу себе представить, что вам может не понадобиться делать эту проверку, но вы не знакомы с обработкой списков в Python.

# Я бы сказал, что самый питонический способ - это вообще не проверять, а просто обрабатывать список. Таким образом, он будет делать правильные вещи, будь то пустой или полный.
# Это имеет преимущество обработки любого контента , в то время как они не требуют конкретной проверки на пустоту. Если a пусто, зависимый блок не будет выполнен, и интерпретатор перейдет к следующей строке.
a = []
b = []
a = input('Go a')
b = input('Go b')

if len(a) != 0:
    print(a)
if len(b) != 0:
    print(b)
else:
    print('Тебе повезло, можешь отдыхать')    


# Тут походу он хотел сказать, что если он не пустой, то надо что-то сделать, а если пустой, то дальше идти