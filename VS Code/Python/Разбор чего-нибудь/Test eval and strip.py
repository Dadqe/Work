# a = 0 in [1, 2, 3, 4, 5, 6, 7, 8, 9]
# print(a)

# str = '1 + 2'
# print(eval(str))


# s=3
# # True
# print(eval('s+1'))
# # 4


# Калькулятор в 7 строк
# while True: # Будет выполняться всегда (бесконечно)
#     command = input('Введите выражение или команду:\n').strip().lower()
    
#     if command == 'exit':
#         break
#     else:
#         result = eval(command)
#         print(f'Результат: {result}')
        
# Для синусов надо добавить в начало from math import sin, все тригонометрические функции так надо испортировать по имени, например для син: from math import sin. А можно сразу все функции сразу закинуть, для этого первой строкой from math import * и всё работает

# Дмитрий написал : 1. Вам не нужен eval почти никогда (читайте "никогда") - это очень плохая практика. Однажды вам в него придёт что-то, что сломает вашу программу и вы этого даже не заметите, а пользователь обязательно заметит. Ответ на то, почему не стоит: "Вы отдаёте контроль ад своим кодом пользователю, с помощью eval можно выполнить ЛЮБОЙ валидный код" узнать, что за валидный код
# 2. from module import * - это ещё одна порочная практика. Ни в одной компании, ни один программист на питоне не пример у вас такой код на ревьью. В проектах, в которых больше 1000 строк, и разрабатываемых более, чем одним программистом.
# Почитать про самодокуметируемый код
